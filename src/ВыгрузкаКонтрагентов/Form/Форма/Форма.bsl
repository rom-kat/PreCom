
&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//Открыть файл
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл"; 
	ПутьКФайлу = Строка(Диалог.ПолноеИмяФайла);
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "Excel-файл (*.xls)|*.xls|Excel2017-файл (*.xlsx)|*.xlsx"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь; 
	Если Диалог.Выбрать() Тогда 
		Элемент.ТекстПодвала = Диалог.ПолноеИмяФайла; 
		Файл          = Диалог.ПолноеИмяФайла;
	КонецЕсли;
   
КонецПроцедуры

&НаСервере
Функция НайтиКонтрагента(СтруктураСтроки, НоваяСтрока)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Ссылка,
		|	Контрагенты.ИНН КАК ИНН,
		|	Контрагенты.КПП КАК КПП,
		|	Контрагенты.НалоговыйНомер КАК НалоговыйНомер,
		|	Контрагенты.РегистрационныйНомер КАК РегистрационныйНомер,
		|	Контрагенты.СтранаРегистрации КАК СтранаРегистрации,
		|	Контрагенты.Наименование КАК Наименование,
		|	Контрагенты.НаименованиеПолное КАК НаименованиеПолное,
		|	Контрагенты.Родитель КАК Родитель
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	(Контрагенты.Наименование = &КраткоеИмя
		|			ИЛИ Контрагенты.Наименование = &ПолноеИмя
		|			ИЛИ Контрагенты.НаименованиеПолное = &КраткоеИмя
		|			ИЛИ Контрагенты.НаименованиеПолное = &ПолноеИмя)";
	
	Запрос.УстановитьПараметр("КраткоеИмя", СтруктураСтроки.КраткоеИмя);
	Запрос.УстановитьПараметр("ПолноеИмя", СтруктураСтроки.ПолноеИмя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		НоваяСтрока.КонтрагентСсылка = ВыборкаДетальныеЗаписи.Ссылка;	
		НоваяСтрока.ИНН = ВыборкаДетальныеЗаписи.ИНН;
		НоваяСтрока.КПП = ВыборкаДетальныеЗаписи.КПП;
		НоваяСтрока.НалоговыйНомер = ВыборкаДетальныеЗаписи.НалоговыйНомер;
		НоваяСтрока.РегистрационныйНомер = ВыборкаДетальныеЗаписи.РегистрационныйНомер;
		НоваяСтрока.ВходитВГруппу = ВыборкаДетальныеЗаписи.Родитель;
		НоваяСтрока.СтранаРегистрации = ВыборкаДетальныеЗаписи.СтранаРегистрации;
		
		ЗапросБанк = Новый Запрос;
		ЗапросБанк.Текст = 
			"ВЫБРАТЬ
			|	БанковскиеСчета.НомерСчета КАК НомерСчета,
			|	БанковскиеСчета.Банк КАК Банк
			|ИЗ
			|	Справочник.БанковскиеСчета КАК БанковскиеСчета
			|ГДЕ
			|	БанковскиеСчета.Владелец = &Владелец";
		
		ЗапросБанк.УстановитьПараметр("Владелец", ВыборкаДетальныеЗаписи.Ссылка);
		
		РезультатЗапросаБанк = ЗапросБанк.Выполнить();
		
		ВыборкаДетальныеЗаписиБанк = РезультатЗапросаБанк.Выбрать();
		
		Пока ВыборкаДетальныеЗаписиБанк.Следующий() Цикл
			
			НоваяСтрока.Банк = ВыборкаДетальныеЗаписиБанк.Банк;
			НоваяСтрока.НомерСчета = ВыборкаДетальныеЗаписиБанк.НомерСчета;

		КонецЦикла;
		
		ЗапросДоговор = Новый Запрос;
		ЗапросДоговор.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Наименование КАК Наименование
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец";
		
		ЗапросДоговор.УстановитьПараметр("Владелец", ВыборкаДетальныеЗаписи.Ссылка);
		
		РезультатЗапросаДоговор = ЗапросДоговор.Выполнить();
		
		ВыборкаДетальныеЗаписиДоговор = РезультатЗапросаДоговор.Выбрать();
		
		СтрокаДоговоры = "";
		Пока ВыборкаДетальныеЗаписиДоговор.Следующий() Цикл
			СтрокаДоговоры = СтрокаДоговоры + ВыборкаДетальныеЗаписиДоговор.Наименование + ", ";
		КонецЦикла;
			
		//МенеджерЭкспедирования
		НоваяСтрока.НаименованиеДоговоров = СтрокаДоговоры;
		
	
		ЗапросКонтЛица = Новый Запрос;
		ЗапросКонтЛица.Текст = 
			"ВЫБРАТЬ
			|	КонтактныеЛица.Ссылка КАК Ссылка,
			|	КонтактныеЛица.ВерсияДанных КАК ВерсияДанных,
			|	КонтактныеЛица.ПометкаУдаления КАК ПометкаУдаления,
			|	КонтактныеЛица.Код КАК Код,
			|	КонтактныеЛица.Наименование КАК Наименование,
			|	КонтактныеЛица.Фамилия КАК Фамилия,
			|	КонтактныеЛица.Имя КАК Имя,
			|	КонтактныеЛица.Отчество КАК Отчество,
			|	КонтактныеЛица.ДатаРождения КАК ДатаРождения,
			|	КонтактныеЛица.Роль КАК Роль,
			|	КонтактныеЛица.Должность КАК Должность,
			|	КонтактныеЛица.Описание КАК Описание,
			|	КонтактныеЛица.ОбъектВладелец КАК ОбъектВладелец,
			|	КонтактныеЛица.ВидКонтактногоЛица КАК ВидКонтактногоЛица,
			|	КонтактныеЛица.ПользовательЛичногоКонтакта КАК ПользовательЛичногоКонтакта,
			|	КонтактныеЛица.Предопределенный КАК Предопределенный,
			|	КонтактныеЛица.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
			|ИЗ
			|	Справочник.КонтактныеЛица КАК КонтактныеЛица
			|ГДЕ
			|	КонтактныеЛица.ОбъектВладелец = &ОбъектВладелец";
		
		ЗапросКонтЛица.УстановитьПараметр("ОбъектВладелец", ВыборкаДетальныеЗаписи.Ссылка);
		
		РезультатЗапросаКонтЛДица = ЗапросКонтЛица.Выполнить();
		
		ВыборкаДетальныеЗаписиКонтЛица = РезультатЗапросаКонтЛДица.Выбрать();
		
		КонтактныеЛица = "";
		Пока ВыборкаДетальныеЗаписиКонтЛица.Следующий() Цикл
			КонтактныеЛица = КонтактныеЛица + ВыборкаДетальныеЗаписиКонтЛица.Наименование + ", ";
		КонецЦикла;
		
		НоваяСтрока.КонтактныеЛица = КонтактныеЛица;
	
		ЗапросКонтакты = Новый Запрос;
		ЗапросКонтакты.Текст = 
			"ВЫБРАТЬ
			|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Ссылка,
			|	КонтрагентыКонтактнаяИнформация.НомерСтроки КАК НомерСтроки,
			|	КонтрагентыКонтактнаяИнформация.Тип КАК Тип,
			|	КонтрагентыКонтактнаяИнформация.Вид КАК Вид,
			|	КонтрагентыКонтактнаяИнформация.Представление КАК Представление,
			|	КонтрагентыКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
			|	КонтрагентыКонтактнаяИнформация.Страна КАК Страна,
			|	КонтрагентыКонтактнаяИнформация.Регион КАК Регион,
			|	КонтрагентыКонтактнаяИнформация.Город КАК Город,
			|	КонтрагентыКонтактнаяИнформация.АдресЭП КАК АдресЭП,
			|	КонтрагентыКонтактнаяИнформация.ДоменноеИмяСервера КАК ДоменноеИмяСервера,
			|	КонтрагентыКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
			|	КонтрагентыКонтактнаяИнформация.НомерТелефонаБезКодов КАК НомерТелефонаБезКодов,
			|	КонтрагентыКонтактнаяИнформация.ВидДляСписка КАК ВидДляСписка
			|ИЗ
			|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
			|ГДЕ
			|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка";
		
		ЗапросКонтакты.УстановитьПараметр("Ссылка", ВыборкаДетальныеЗаписи.Ссылка);
		
		РезультатЗапросаКонтакты = ЗапросКонтакты.Выполнить();
		
		ВыборкаДетальныеЗаписиКонтакты = РезультатЗапросаКонтакты.Выбрать();
		
		Пока ВыборкаДетальныеЗаписиКонтакты.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписиКонтакты.Вид=Справочники.ВидыКонтактнойИнформации.EmailКонтрагенты Тогда
				НоваяСтрока.email = ВыборкаДетальныеЗаписиКонтакты.Представление;
			ИначеЕсли ВыборкаДетальныеЗаписиКонтакты.Вид=Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента Тогда	
				НоваяСтрока.телефон = ВыборкаДетальныеЗаписиКонтакты.Представление;
			ИначеЕсли ВыборкаДетальныеЗаписиКонтакты.Вид=Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента Тогда	
				НоваяСтрока.ЮридическийАдрес = ВыборкаДетальныеЗаписиКонтакты.Представление;
			ИначеЕсли ВыборкаДетальныеЗаписиКонтакты.Вид=Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента Тогда	
				НоваяСтрока.ФактическийАдрес = ВыборкаДетальныеЗаписиКонтакты.Представление;
			ИначеЕсли ВыборкаДетальныеЗаписиКонтакты.Вид=Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента Тогда	
				НоваяСтрока.ПочтовыйАдрес = ВыборкаДетальныеЗаписиКонтакты.Представление;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции // НайтиКонтрагента()

&НаСервере
Процедура ДобавитьСтрокуТЗ(СтруктураСтроки)

	НоваяСтрока = ТЗ.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСтроки);
	
	НоваяСтрока.КонтрагентСсылка = НайтиКонтрагента(СтруктураСтроки, НоваяСтрока);

КонецПроцедуры // ДобавитьСтрокуТЗ()

&НаКлиенте
Процедура Загрузить(Команда)
	
	Попытка
		ОбъектЕксел = Новый COMОбъект("Excel.Application");    
		ОбъектЕксел.Visible = 0;
		ОбъектЕксел.WorkBooks.Open(СокрЛП(Файл));
		Лист = ОбъектЕксел.Sheets(1);
	Исключение
		Сообщить("Ошибка открытия файла ! " + строка(ОписаниеОшибки()));
		Возврат;
	КонецПопытки;
	
	КоличествоИспользуемыхКолонок = Лист.Columns.Count();
	КоличествоИспользуемыхСтрок = Лист.Rows.Count();
	
	Если КоличествоИспользуемыхКолонок=0 Тогда
		Сообщить("Количество колонок в файле должно быть <> 0");
		Возврат;
	КонецЕсли;
	
	Если КоличествоИспользуемыхКолонок=0 Тогда
		Сообщить("Количество строк в файле должно быть <> 0");
		Возврат;
	КонецЕсли;
	
	
	//ЭлементыФормы.ИндикаторСостояния.МинимальноеЗначение=(НачСтрока+1);
	//ЭлементыФормы.ИндикаторСостояния.МаксимальноеЗначение=КоличествоИспользуемыхСтрок;
	
	//Сообщить("Начало ЗаполнитьТаблицу: " + строка(ТекущаяДата()));
	
	НовыйЦвет = Новый Цвет(255,0,0);
	
	Для у=2 по 405 Цикл
		
		ОбработкаПрерыванияПользователя();
		СтруктураСтроки = Новый Структура("КраткоеИмя, ОснТип, Тип, СвояФирма,	Покупатель,	Поставщик, ПолноеИмя"); 
		Ячейка = Лист.Cells(у, 1);
		СтруктураСтроки.КраткоеИмя = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 2);
		СтруктураСтроки.ОснТип = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 3);
		СтруктураСтроки.Тип = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 4);
		СтруктураСтроки.СвояФирма = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 5);
		СтруктураСтроки.Покупатель = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 6);
		СтруктураСтроки.Поставщик = СокрЛП(Ячейка.Value);
		Ячейка = Лист.Cells(у, 7);
		СтруктураСтроки.ПолноеИмя = СокрЛП(Ячейка.Value);
		
		ДобавитьСтрокуТЗ(СтруктураСтроки);
		
	КонецЦикла;
	
	ОбъектЕксел.quit();
	
КонецПроцедуры